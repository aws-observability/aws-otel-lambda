plugins {
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'com.google.cloud.tools.jib' version "2.7.1"
}

group 'com.amazon.sampleapp'
version '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        setUrl("https://oss.sonatype.org/content/repositories/snapshots")
    }
}

configurations {
    extraLibs
}

application {
    // Define the main class for the application.
    mainClassName = 'com.amazon.sampleapp.DemoApplication'
}

dependencies {
    implementation "com.sparkjava:spark-core:2.9.3"
    implementation "com.squareup.okhttp3:okhttp:3.14.8"
    implementation "software.amazon.awssdk:s3:2.14.26"
    implementation "io.grpc:grpc-api:1.34.1"
    implementation "io.grpc:grpc-netty-shaded:1.34.1"
    implementation "com.amazonaws:aws-lambda-java-runtime-interface-client:1.0.0"

    implementation platform("io.opentelemetry:opentelemetry-bom:1.0.1")

    implementation "io.opentelemetry:opentelemetry-api"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:1.0.0-alpha"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-aws"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp-metrics:1.0.1-alpha"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:1.0.1-alpha"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "com.amazonaws:aws-lambda-java-runtime-interface-client:1.0.0"
}

application {
    // Define the main class for the application.
    mainClassName = 'com.amazon.sampleapp.App'
}

jib {
    to {
        image = System.getenv("AWS_REGISTERY_ACCOUNT") + ".dkr.ecr.us-west-2.amazonaws.com/spark:" + System.getenv("COMMIT_HASH")
    }
    from {
        image = "public.ecr.aws/u0d6r4y4/aws-opentelemetry-java-base:alpha"
    }
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into 'dependencies'
}

