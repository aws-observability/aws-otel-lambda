name: Soak tests

on:
  # TODO(anuraaga): Enable cron after this settles down
  workflow_dispatch:
    inputs:
      soak_config:
        description: 'set memory/cpu threshold, soak time, emitter interval'
        retuired: false
        default: '-t 1800'

jobs:
  soaking-test:
    runs-on: ubuntu-20.04
    name: Soak Test - ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: java-awssdk-agent
            layer_kind: java-agent
            language: java
            build_directory: java
            build_command: ./build.sh
            terraform_directory: integration-tests/java/aws-sdk/agent
            expected_template: adot/utils/expected-templates/java-awssdk-agent.json
            soak_config: '-c 200 -m 90'
          - name: java-awssdk-wrapper
            layer_kind: java-wrapper
            language: java
            build_directory: java
            build_command: ./build.sh
            terraform_directory: integration-tests/java/aws-sdk/wrapper
            expected_template: adot/utils/expected-templates/java-awssdk-wrapper.json
            soak_config: '-c 200 -m 90'
          - name: nodejs-awssdk
            layer_kind: nodejs
            language: nodejs
            build_directory: nodejs
            build_command: ./build.sh
            terraform_directory: integration-tests/nodejs/aws-sdk
            expected_template: adot/utils/expected-templates/nodejs-awssdk.json
            soak_config: '-c 90 -m 70'
          - name: python
            layer_kind: python38
            language: python
            build_directory: python
            build_command: ./build.sh
            terraform_directory: integration-tests/python/aws-sdk
            expected_template: adot/utils/expected-templates/python.json
            soak_config: '-c 90 -m 70'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - uses: actions/setup-java@v2
        if: ${{ matrix.language == 'java' }}
        with:
          distribution: adopt
          java-version: '11'
      - name: Cache (Java)
        uses: actions/cache@v2
        if: ${{ matrix.language == 'java' }}
        with:
          path: |
            ~/go/pkg/mod
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-node@v2
        if: ${{ matrix.language == 'nodejs' }}
        with:
          node-version: '14'
      - name: Cache (NodeJS)
        uses: actions/cache@v2
        if: ${{ matrix.language == 'nodejs' }}
        with:
          path: |
            ~/go/pkg/mod
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-python@v2
        if: ${{ matrix.language == 'python' }}
        with:
          python-version: '3.x'
      - name: Cache (Python)
        uses: actions/cache@v2
        if: ${{ matrix.language == 'python' }}
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      # Default session duration is 6 hours.
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-region: us-east-1
      - name: Patch ADOT
        run: ./patch-upstream.sh
      # Login to ECR since may be needed for Python build image.
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
      - name: Build layers / functions
        run: ${{ matrix.build_command }}
        working-directory: ${{ matrix.build_directory }}
      - uses: hashicorp/setup-terraform@v1
      - name: Initialize terraform
        run: terraform init
        working-directory: ${{ matrix.terraform_directory }}
      - name: Apply terraform
        run: terraform apply -auto-approve
        working-directory: ${{ matrix.terraform_directory }}
        env:
          TF_VAR_sdk_layer_name: aws-otel-lambda-${{ matrix.layer_kind }}-${{ github.sha }}
          TF_VAR_function_name: hello-lambda-${{ matrix.language }}-${{ github.run_id }}-${{ matrix.name }}
      - name: Extract endpoint
        id: extract-endpoint
        run: terraform output -raw api-gateway-url
        working-directory: ${{ matrix.terraform_directory }}
      - name: Send request to endpoint
        run: curl -sS ${{ steps.extract-endpoint.outputs.stdout }}
      - name: Checkout test framework
        uses: actions/checkout@v2
        with:
          repository: aws-observability/aws-otel-test-framework
          path: test-framework
      - name: validate sample
        run: |
          cp ${{ matrix.expected_template }} test-framework/validator/src/main/resources/expected-data-template/lambdaExpectedTrace.mustache
          cd test-framework
          ./gradlew :validator:run --args="-c default-lambda-validation.yml --endpoint ${{ steps.extract-endpoint.outputs.stdout }} --region $AWS_REGION"
      - name: Run soak test
        run: |
          docker run --rm -e AWS_DEFAULT_REGION -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_SESSION_TOKEN \
            public.ecr.aws/aws-otel-test/lambda-soak:latest -n hello-lambda-${{ matrix.language }}-${{ github.run_id }}-${{ matrix.name }} \
            -e ${{ steps.extract-endpoint.outputs.stdout }} ${{ github.event.inputs.soak_config }} ${{ matrix.soak_config }}
      - name: Remove layers from terraform management to prevent deletion.
        run:  terraform state rm module.test.aws_lambda_layer_version.sdk_layer
        working-directory: ${{ matrix.terraform_directory }}
      - name: Destroy terraform
        if: always()
        run: terraform destroy -auto-approve
        working-directory: ${{ matrix.terraform_directory }}
